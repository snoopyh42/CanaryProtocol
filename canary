#!/bin/bash

# Canary Protocol - Main Command Interface
# Provides easy access to all system functions

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR" || exit 1

# Check if no arguments provided - launch TUI
if [ $# -eq 0 ]; then
    echo "🐦 Launching Smart Canary Protocol TUI..."
    python3 core/canary_tui.py
    exit 0
fi

case "$1" in
    "tui"|"menu"|"interactive")
        echo "🐦 Launching Smart Canary Protocol TUI..."
        python3 core/canary_tui.py
        ;;
    "setup")
        echo "🚀 Running complete system setup..."
        scripts/setup_complete_smart_system.sh
        ;;
    "dashboard")
        echo "🧠 Loading learning dashboard..."
        scripts/learning_dashboard.sh
        ;;
    "feedback")
        echo "📝 Starting Smart Canary Protocol feedback..."
        python3 core/classes/smart_feedback.py
        ;;
    "feedback-individual"|"articles")
        echo "📰 Starting individual article feedback..."
        python3 core/classes/individual_feedback.py
        ;;
    "feedback-summary")
        echo "📊 Feedback Summary:"
        echo "==================="
        echo ""
        echo "📝 Digest-level feedback:"
        python3 core/classes/smart_feedback.py --summary
        echo ""
        echo "📰 Individual article feedback:"
        python3 core/classes/individual_feedback.py --summary
        ;;
    "feedback-clear")
        echo "🗑️  Clear Feedback Data"
        echo "======================="
        echo ""
        echo "Choose what to clear:"
        echo "1) Digest-level feedback only"
        echo "2) Individual article feedback only" 
        echo "3) ALL feedback data"
        echo "4) Cancel"
        echo ""
        read -r -p "Enter choice (1-4): " choice
        
        case $choice in
            1)
                echo "Clearing digest-level feedback..."
                python3 core/classes/smart_feedback.py --clear
                ;;
            2)
                echo "Clearing individual article feedback..."
                python3 core/classes/individual_feedback.py --clear
                ;;
            3)
                echo "Clearing ALL feedback data..."
                python3 core/classes/smart_feedback.py --clear
                echo ""
                python3 core/classes/individual_feedback.py --clear
                ;;
            4)
                echo "❌ Operation cancelled"
                ;;
            *)
                echo "❌ Invalid choice"
                ;;
        esac
        ;;
    "help"|"--help"|"-h")
        echo "🧠 Smart Canary Protocol - Command Interface"
        echo "=============================================="
        echo ""
        echo "Available commands:"
        echo ""
        echo "🚀 Setup & Management:"
        echo "  ./canary setup      - Complete system setup"
        echo "  ./canary dashboard  - View learning progress"
        echo "  ./canary status     - System status overview"
        echo "  ./canary config     - Configuration management"
        echo "  ./canary backup     - Backup all data"
        echo "  ./canary verify     - Verify backup integrity"
        echo "  ./canary restore    - Restore from backup"
        echo "  ./canary archive    - Archive old data"
        echo "  ./canary migrate    - Manage database migrations"
        echo "  ./canary logs       - View recent system logs"
        echo "  ./canary cron-reset - Reset cron jobs (fix duplicates)"
        echo "  ./canary uninstall  - Uninstall Smart Canary Protocol"
        echo ""
        echo "🧪 Analysis & Testing:"
        echo "  ./canary run        - Execute main canary protocol"
        echo "  ./canary test       - Run in test mode"
        echo "  ./canary emergency  - Emergency analysis"
        echo ""
        echo "📝 User Interaction:"
        echo "  ./canary feedback            - Provide digest-level feedback"
        echo "  ./canary feedback-individual - Rate individual articles"
        echo "  ./canary articles           - Rate individual articles (alias)"
        echo "  ./canary feedback-summary   - View all feedback summaries"
        echo ""
        echo "📖 Examples:"
        echo "  ./canary config show     - View current settings"
        echo "  ./canary test           - Test system functionality"
        echo "  ./canary status         - Check system health"
        echo ""
        ;;
    "run")
        echo "🔄 Running main Canary Protocol..."
        shift  # Remove 'run' from arguments
        python3 core/canary_protocol.py "$@"
        ;;
    "emergency")
        echo "🚨 Running emergency analysis..."
        scripts/emergency_analysis.sh
        ;;
    "test")
        echo "🧪 Running test mode..."
        python3 core/canary_protocol.py --test
        ;;
    "backup")
        echo "💾 Creating system backup..."
        scripts/backup_learning_data.sh
        ;;
    "verify"|"verify-backup")
        echo "🔍 Verifying backup integrity..."
        python3 core/classes/backup_verification.py --verify
        ;;
    "archive"|"data-archive")
        echo "📦 Running data archival..."
        shift  # Remove 'archive' from arguments
        python3 core/classes/data_archival.py "$@"
        ;;
    "migrate"|"db-migrate")
        echo "🔧 Managing database migrations..."
        shift  # Remove 'migrate' from arguments
        python3 core/classes/database_migrations.py "$@"
        ;;
    "ab-test"|"ab-testing")
        echo "🧪 Running A/B testing framework..."
        python3 core/ab_testing.py "$@"
        ;;
    "collect")
        shift  # Remove 'collect' from arguments
        if [ "$1" = "summary" ]; then
            python3 core/classes/daily_silent_collector.py --summary
        elif [ "$1" = "check-emergency" ]; then
            python3 core/classes/daily_silent_collector.py --check-emergency
        else
            python3 core/classes/daily_silent_collector.py "$@"
        fi
        ;;
    "restore")
        echo "🔄 Data Restore Manager..."
        if [ "$2" = "list" ]; then
            python3 core/classes/data_restore.py --list
        elif [ "$2" = "history" ]; then
            python3 core/classes/data_restore.py --history
        elif [ -n "$3" ] && [ "$2" = "file" ]; then
            python3 core/classes/data_restore.py --file "$3"
        else
            python3 core/classes/data_restore.py --interactive
        fi
        ;;
    "logs")
        echo "📋 Smart Canary Protocol - Recent Logs"
        echo "======================================"
        echo ""
        echo "🔍 Recent Error Log (last 10 entries):"
        if [ -f logs/error.log ]; then
            tail -n 10 logs/error.log | sed 's/^/  /'
        else
            echo "  No error log found"
        fi
        echo ""
        echo "📈 Recent Cron Activity (last 10 entries):"
        if [ -f logs/canary_cron.log ]; then
            tail -n 10 logs/canary_cron.log | sed 's/^/  /'
        else
            echo "  No cron log found"
        fi
        echo ""
        echo "🧠 Recent Analysis Log (last 5 entries):"
        if [ -f logs/analysis.log ]; then
            tail -n 5 logs/analysis.log | sed 's/^/  /'
        else
            echo "  No analysis log found"
        fi
        echo ""
        echo "💡 Tip: Use 'tail -f logs/[filename].log' to watch logs in real-time"
        ;;
    "cron-reset")
        echo "🔄 Resetting cron jobs (removing duplicates)..."
        # Remove all canary cron jobs first
        crontab -l | grep -v canary_protocol | crontab -
        # Add back the single correct one
        (crontab -l 2>/dev/null; echo "0 8 * * * cd $SCRIPT_DIR && python3 core/canary_protocol.py >> logs/canary_cron.log 2>&1") | crontab -
        echo "✅ Cron jobs reset successfully"
        ;;
    "uninstall")
        echo "🗑️  Smart Canary Protocol Uninstaller"
        echo "===================================="
        echo ""
        scripts/uninstall_canary_protocol.sh
        ;;
    "status")
        echo "📊 Smart Canary Protocol - System Status"
        echo "========================================"
        echo ""
        echo "🔧 System Health:"
        echo "  Database: $([ -f data/canary_protocol.db ] && echo "✅ Active" || echo "❌ Missing")"
        echo "  Config: $([ -f config/config.yaml ] && echo "✅ Found" || echo "❌ Missing")"
        echo "  Logs: $([ -d logs ] && echo "✅ Directory exists" || echo "❌ Missing")"
        echo "  Learning: $([ $(sqlite3 data/canary_protocol.db "SELECT COUNT(*) FROM individual_article_feedback;" 2>/dev/null || echo "0") -gt 0 ] && echo "✅ Active ($(sqlite3 data/canary_protocol.db "SELECT COUNT(*) FROM individual_article_feedback;" 2>/dev/null) entries)" || echo "📝 No feedback yet")"
        echo ""
        echo "📈 Recent Activity:"
        echo "  Last analysis: $(sqlite3 data/canary_protocol.db "SELECT MAX(date) FROM weekly_digests;" 2>/dev/null || echo "No analysis run yet")"
        echo "  Last cron run: $(tail -n 1 logs/cron_activity.log 2>/dev/null | cut -d: -f1-2 || echo "No cron activity")"
        echo "  Database entries: $(sqlite3 data/canary_protocol.db "SELECT COUNT(*) FROM weekly_digests;" 2>/dev/null || echo "0")"
        echo "  Learning entries: $(sqlite3 data/canary_protocol.db "SELECT COUNT(*) FROM individual_article_feedback;" 2>/dev/null || echo "0")"
        echo ""
        echo "📁 Storage Usage:"
        echo "  Total data: $(du -sh data/ 2>/dev/null | cut -f1 || echo "No data directory")"
        echo "  Total logs: $(du -sh logs/ 2>/dev/null | cut -f1 || echo "No logs directory")"
        echo "⚙️  Config files: $(find config/ -maxdepth 1 -type f 2>/dev/null | wc -l) files"
        echo ""
        echo "📈 Quick Intelligence Check:"
        python3 core/classes/adaptive_intelligence.py 2>/dev/null | head -n 15 || echo "Intelligence system not ready"
        ;;
    "config")
        echo "⚙️  Configuration Management:"
        echo "============================"
        echo ""
        if [ "$2" = "show" ]; then
            echo "📋 Current Configuration:"
            echo ""
            python3 -c "
import sys
sys.path.append('core')
from classes.config_loader import get_config
config = get_config()
print(f'🔧 System Settings:')
print(f'  Learning enabled: {config.get(\"system.learning_enabled\")}')
print(f'  Urgent score threshold: {config.get(\"system.urgent_analysis_score\")}')
print(f'  Daily collection: {config.get(\"system.daily_collection_time\")}')
print(f'')
print(f'📊 Monitoring:')
print(f'  News sources: {len(config.get(\"monitoring.news_sources\", []))}')
print(f'  Keywords: {len(config.get(\"monitoring.keywords\", []))}')
print(f'  Economic APIs: {len(config.get(\"monitoring.economic_apis\", {}))}')
print(f'')
print(f'🤖 AI Settings:')
print(f'  Model: {config.get(\"intelligence.model\")}')
print(f'  Temperature: {config.get(\"intelligence.temperature\")}')
print(f'  Max tokens: {config.get(\"intelligence.max_tokens\")}')
"
        elif [ "$2" = "create" ]; then
            echo "📝 Creating example user config..."
            python3 -c "
import sys
sys.path.append('core')
from classes.config_loader import ConfigLoader
config = ConfigLoader()
config.create_example_user_config()
print('✅ Created config/config_example.yaml')
print('💡 Copy to config/config.yaml and customize as needed')
"
        elif [ "$2" = "validate" ]; then
            echo "🔍 Validating configuration..."
            python3 -c "
import sys
sys.path.append('core')
from classes.config_loader import get_config
config = get_config()
print('✅ Configuration loaded successfully')
print(f'News sources: {len(config.get(\"monitoring.news_sources\", []))}')
print(f'Learning enabled: {config.get(\"system.learning_enabled\")}')
print(f'Urgency threshold: {config.get(\"system.urgent_analysis_score\")}')
"
        else
            echo "Available config commands:"
            echo "  ./canary config show      - Show current configuration"
            echo "  ./canary config create    - Create example config file"
            echo "  ./canary config validate  - Validate configuration"
            echo ""
            echo "📁 Configuration Files:"
            echo "  config/config_defaults.yaml  - System defaults"
            echo "  config/config.yaml          - User customizations (create from example)"
            echo "  config/config_example.yaml  - Example user config"
        fi
        ;;
    "")
        echo "🧠 Smart Canary Protocol - Command Interface"
        echo "============================================="
        echo ""
        echo "Available commands:"
        echo ""
        echo "🚀 Setup & Management:"
        echo "  ./canary setup      - Complete system setup"
        echo "  ./canary dashboard  - View learning progress"
        echo "  ./canary status     - System status overview"
        echo "  ./canary config     - Configuration management"
        echo "  ./canary backup     - Backup all data"
        echo "  ./canary restore    - Restore from backup"
        echo "  ./canary logs       - View recent system logs"
        echo "  ./canary cron-reset - Reset cron jobs (fix duplicates)"
        echo "  ./canary uninstall  - Uninstall Smart Canary Protocol"
        echo ""
        echo "🧪 Analysis & Testing:"
        echo "  ./canary test       - Run in test mode"
        echo "  ./canary emergency  - Emergency analysis"
        echo ""
        echo "📝 User Interaction:"
        echo "  ./canary feedback            - Provide digest-level feedback"
        echo "  ./canary feedback-individual - Rate individual articles"
        echo "  ./canary articles           - Rate individual articles (alias)"
        echo "  ./canary feedback-summary   - View all feedback summaries"
        echo ""
        echo "📖 Examples:"
        echo "  ./canary config show     - View current settings"
        echo "  ./canary test           - Test system functionality"
        echo "  ./canary status         - Check system health"
        echo ""
        ;;
    *)
        echo "❓ Unknown command: $1"
        echo "Run './canary help' for available commands"
        exit 1
        ;;
esac
